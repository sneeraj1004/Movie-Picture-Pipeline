# Workflow name
name: Backend Continuous Deployment

# Triggers for the workflow
on:      
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main
 # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

# Jobs defined in the workflow
jobs:
  backend-lint-job:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v3    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    # Install the dependencies.
    - name: Install Dependencies
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8
    
    # Run the linter.    
    - name: Run lint
      run: |
        pipenv run lint
        
  backend-test-job:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v3    
    - name: Install pipenv
      run: pip install pipenv
    - name: Install dependencies
      run: pipenv install --dev
    - name: Test with pytest
      run: |
        pipenv run test
        
  backend-build-job:
    runs-on: ubuntu-latest
    needs: [backend-lint-job, backend-test-job] #dependent job
    defaults:
      run:
        working-directory: ./backend
    env:        
        AWS_REGION: us-east-1
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon 
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and Push Docker Image
      working-directory: ./backend
      env:
        IMAGE_TAG: latest
        REPO_NAME: backend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag 666221279708.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG .
        docker push 666221279708.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
    
    - name: Configure Kubeconfig
      run:
       aws eks update-kubeconfig --name udacity-project4-cluster --region us-east-1


    - name: Deploy Docker Image to Amazon EKS
      working-directory: ./backend/k8s
      env:
        IMAGE_TAG: latest
        REPO_NAME: backend
      run: |
          kustomize edit set image backend=666221279708.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
          kustomize build | kubectl apply -f -